/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    // flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ { 
    behaviors {
        mtt:mod_tap_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_TO";
            #binding-cells = <2>;
            flavour = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&to>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_unlock {
            timeout-ms = <50>;
            key-positions = <11 12 13 16 17 18>;
            layers = <3>;
            bindings = <&to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
       	layer_default {
            bindings = <
            &kp Q    &kp W &kp E &kp R     &kp T 		    &kp Y   &kp U  &kp I &kp O         &kp P 
            &kp A    &kp S &kp D &kp F     &kp G 	        &kp H   &kp J  &kp K &kp L         &kp BACKSPACE
            &kp LALT &kp Z &kp X &kp C     &kp V            &kp B   &kp N  &kp M &mt LGUI  DEL &kp ENTER
                                 &kp LCTRL &kp LSHFT  	    &kp SPC &mtt LC(LS(LALT)) 1 
            >;
		};

       	layer_symbols {
            bindings = <
            &kp N1    &kp N2   &kp N3   &kp N4    &kp N5               &kp N6    &kp N7     &kp N8   &kp N9    &kp N0 
            &kp GRAVE &kp TAB  &kp UP   &kp LBKT  &kp RBKT             &kp SEMI  &kp APOS   &kp LBKT &kp RBKT  &kp BACKSPACE 
            &kp LALT  &kp LEFT &kp DOWN &kp RIGHT &kp BACKSPACE        &kp COMMA &kp PERIOD &kp FSLH &kp EQUAL &kp ENTER 
                                        &to 0     &kp LSHFT            &kp SPACE &to 2 
            >;
		};	
		
		layer_etc {
            bindings = <
            &kp ESC     &trans        &trans        &trans        &kp C_VOL_UP        &kp PRINTSCREEN &kp F1 &kp F2  &kp F4  &kp F4
            &to 3       &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_VOL_DN        &kp K_CALC      &kp F5 &kp F6  &kp F7  &kp F8 
            &bt BT_CLR  &bt BT_SEL(0) &bt BT_SEL(1) &bt BT_SEL(2) &kp C_MUTE          &kp CAPS        &kp F9 &kp F10 &kp F11 &kp F12   
                                                    &to 0         &kp LALT  		  &kp SPACE       &trans 
            >;
		};	
        
        layer_lock {
            bindings = <
            &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans 
            &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans    
                                 &trans &trans        &trans &trans 
            >;
		};	
        
	};
};
